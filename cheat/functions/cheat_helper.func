#!/bin/bash

function cheat_helper() {
  local __usage="
  NAME:
    cheat_helper - list commands in a cheatsheet for selection and copy to
                   all clipboards

  SYNOPSIS
    cheat_helper [OPTIONS]... [CHEATSHEET]

  OPTIONS:
    -h, --help       Prints this message
    -s, --search     Search all cheatsheets for pattern and list commands
    -x, --execute    Execute selected command
    -a, --all        Include all commands, not just ones matching the cheatsheet or pattern

  EXAMPLES:
    cheat_helper -h

    # List commands found in 'aws' cheatsheet. The selected command is copied
    # to all clipboards
    cheat_helper aws

    cheat_helper -s aws

    cheat_helper -s -x aws

    cheat_helper -a useful
  "

  while [[ "$1" =~ ^-{1,2}.* ]]; do
    opt="$1"
    shift;

    case "$opt" in
      "-h"|"--help")
        echo "$__usage"
        return 1;;
      "-a"|"--all")
        local all=yes;;
      "-s"|"--search")
        local search=yes;;
      "-x"|"--execute")
        local execute=yes;;
      *)
        echo ERROR Invalid option: \"$opt\" >&2
        return 1;;
    esac
  done


  if [ $# -ne 1 ]; then
    echo ERROR Must specifiy a valid cheatsheet or pattern
    return 1
  fi

  local cheatsheet=$1

  local command=""
  if [ "$search" == "yes" ]; then
    command="cheat -s $cheatsheet | egrep -v '^[[:space:]]*$' | egrep '^[[:space:]].*' | grep -v '\\#' | egrep -v '^$cheatsheet' | sed -r 's/^\s+//'"
  else
    command="cheat $cheatsheet | egrep -v '^[[:space:]]*$' | grep -v '\\#'"
  fi

  if [ "$all" != "yes" ]; then
    command="$command | egrep '^$cheatsheet'"
  fi

  echo command: $command

  select_from_options -d "$command"

  if [ "$execute" == "yes" ]; then
    eval $(ret select_from_options)
  fi
}

