#!/bin/bash

# Git checkout remote branch containing specified pattern
function git_checkout_remote_branch() {
  if [ $# -ne 1 ]; then
    echo "ERROR: Must specifiy a pattern to match"
    return 1
  fi

  local pattern=$1

  # Must wrap it in parentheses to make it an array, otherwise it's just a space separated list
  local branches=($(git branch -r | grep -i $pattern | sed -e 's/^[ \t]*//' | cut -c 8-))
  local size=${#branches[@]}

  if [ $size -eq 0 ]; then
    echo "No branches found containing \"$pattern\""
    return 0
  fi

  local desired_branch="no file selected"
  if [ $size -gt 1 ]; then
    echo "Found $size branches."

    for index in "${!branches[@]}"; do
      local position=$(( $index + 1 ))
      printf "\t%s)\t%s\n" "$position" "${branches[$index]}"
    done

    local desired_position=1
    local number_regex='^[0-9]+$'
    while :; do
      echo
      read -p "Please enter a number between 1 and $size for the desired file: " number

      [[ $number =~ $number_regex ]] || { echo "Please enter a valid number"; continue; }

      if ((number >= 1 && number <= $size)); then
        desired_position=$number
        break
      else
        echo "ERROR: Number out of range, please try again"
      fi
    done

    local desired_index=$(( $desired_position - 1 ))
    desired_branch=${branches[$desired_index]}
  else
    desired_branch=${branches[0]}
  fi

  git checkout -b $desired_branch origin/$desired_branch
}

