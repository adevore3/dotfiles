#!/usr/bin/env bash

export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# if not running interactively, don't do anything
[ -z "$PS1" ] && return

# shortcut to dotfiles
export DOTFILES="${HOME}/dotfiles"

. "${DOTFILES}/bash/colors.theme"
. "${DOTFILES}/bash/base.theme"

# private or per instance configuration
if [ -a ~/.localrc ]; then source ~/.localrc; fi

# source our functions (must go before configs because conditionally_prefix_path is required for some configs)
for config_file in $(find ${DOTFILES} -type f -name "*.func"); do
  #echo $config_file
  . $config_file
done

# source our configurations
for config_file in $(find ${DOTFILES} -type f -name "config.bash"); do
  . $config_file
done

# source our aliases
for config_file in $(find ${DOTFILES} -type f -name "aliases.bash"); do
  . $config_file
done

unset config_file

if [[ $PROMPT ]]; then
    export PS1=$PROMPT
fi

# Mostly works (sometimes expires, not sure why)
# Also must remain in bashrc otherwise I'm prompted way too often
if [[ -z "${SSH_AGENT_DISABLE}" ]]; then
  if [ ! -S ~/.ssh/ssh_auth_sock ]; then
    eval `ssh-agent`
    ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
  fi
  export SSH_AUTH_SOCK=~/.ssh/ssh_auth_sock
  ssh-add -l > /dev/null || ssh-add
fi

