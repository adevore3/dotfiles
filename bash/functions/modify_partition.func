#!/bin/bash

source "${DOTFILES}/bash/functions/log_utils.sh"

function modify_partition() {
  local __usage="
NAME:
  modify_partition - Modify the start & end date in a file by the specified
                     partition. By default it increments the partition value
                     by 1 for a file named run.sh

SYNOPSIS
  modify_partition [OPTIONS]...

OPTIONS:
  -h, --help       Prints this message
  -y, --year       Modify the year of the start/end date
  -m, --month      Modify the month of the start/end date
  -d, --day        Modify the day of the start/end date
  -hh, --hour      Modify the hour of the start/end date
  --increase       Increase the selected partition of the start/end date by a given amount
  --decrease       Decrease the selected partition of the start/end date by a given amount
  -f, --file       Specify file, defaults to run.sh

EXAMPLES:
  modify_partition -h

  # List start and end date, 1 at a time, and let user specify which partition to increment by 1
  modify_partition

  # Increment the year by 1 for both the start/end date
  modify_partition -y

  # Increase hour partition by a given amount
  modify_partition -hh --increase 10

  # Decrease partition by a given amount, lets user specify which partition
  modify_partition --decrease 10

  # Specify file name
  modify_partition -d -f run_custom.sh
"

  local modify_operator=increase
  local update_amount=1
  local file=run.sh
  while [[ "$1" =~ ^-{1,2}.* ]]; do
    opt="$1"

    case "$opt" in
      "-h"|"--help")
        echo "$__usage"
        return 0
        ;;
      "-y"|"--year")
        local selected_partition=year
        shift
        ;;
      "-m"|"--month")
        local selected_partition=month
        shift
        ;;
      "-d"|"--day")
        local selected_partition=day
        shift
        ;;
      "-hh"|"--hour")
        local selected_partition=hour
        shift
        ;;
      "--inc"|"--increase")
        shift
        local update_amount=$1
        shift
        ;;
      "--dec"|"--decrease")
        modify_operator=decrease
        shift
        local update_amount=$1
        shift
        ;;
      "-f"|"--file")
        shift
        file=$1
        shift
        ;;
      *)
        log_error "Invalid option: \"$opt\""
        return 1
        ;;
    esac
  done


  if [ ! -f "$file" ]; then
    log_error "Expected file '$file' to exist"
    return 1
  fi

  function update_date() {
    local search_str=$1

    date_str=$(cat $file | fgrep "$search_str" | cut -d= -f2)
    regex="([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):[0-9]{2}:[0-9]{2}-[0-9]{2}:[0-9]{2}"


    if [[ "$date_str" =~ $regex ]]; then
      local original_date="${BASH_REMATCH[0]}"

      case "$modify_operator" in
        "increase")
          local operator_symbol="+"
          ;;
        "decrease")
          local operator_symbol="-"
          ;;
        *)
          log_error "Invalid operator: \"$modify_operator\""
          return 1
          ;;
      esac

      local new_date=$(TZ=UTC+6 date +"%Y-%m-%dT%H:%M:%S%:z" -d "$original_date $operator_symbol $update_amount $selected_partition")

      log_info "old $search_str $original_date"
      log_info "new $search_str $new_date"

      sed -i "s/$search_str\"$original_date/$search_str\"$new_date/g" $file

    else
      log_error "Could not find a '$search_str' string"
    fi
  }

  update_date "start="
  update_date "end="
}

